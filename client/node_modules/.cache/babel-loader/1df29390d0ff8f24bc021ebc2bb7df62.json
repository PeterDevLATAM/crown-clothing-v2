{"ast":null,"code":"import { async } from \"@firebase/util\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\"; //Auth\n\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from \"firebase/firestore\"; //DB\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLmE9OJUrr-zhvYlhH7FMb4aIsa8lps-k\",\n  authDomain: \"crwn-db-1c597.firebaseapp.com\",\n  projectId: \"crwn-db-1c597\",\n  storageBucket: \"crwn-db-1c597.appspot.com\",\n  messagingSenderId: \"643591164779\",\n  appId: \"1:643591164779:web:c88af4a10302cacc9f722e\",\n  measurementId: \"G-37VRYC7T2X\"\n};\ninitializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let aditionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...aditionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback); //is a listener that will excecute the callback function you pass to it whenever is a change in Auth state","map":{"version":3,"sources":["/Users/Peter/Coding/Complete React ZTM/E-ShopV2/crwn-clothing-v2/src/utils/firebase/firebase.utils.js"],"names":["async","initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","createUserDocumentFromAuth","userAuth","aditionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"mappings":"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","sourcesContent":["import { async } from \"@firebase/util\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\"; //Auth\n\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from \"firebase/firestore\"; //DB\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBLmE9OJUrr-zhvYlhH7FMb4aIsa8lps-k\",\n  authDomain: \"crwn-db-1c597.firebaseapp.com\",\n  projectId: \"crwn-db-1c597\",\n  storageBucket: \"crwn-db-1c597.appspot.com\",\n  messagingSenderId: \"643591164779\",\n  appId: \"1:643591164779:web:c88af4a10302cacc9f722e\",\n  measurementId: \"G-37VRYC7T2X\",\n};\n\ninitializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const addCollectionsAndDocuments= async (collectionKey, objectsToAdd)=>{\n  const collectionRef= collection(db, collectionKey)\n  const batch= writeBatch(db)\n\n  objectsToAdd.forEach((object)=>{\n    const docRef= doc(collectionRef,object.title.toLowerCase())\n    batch.set(docRef,object)\n  })\n\n  await batch.commit()\n  console.log('done')\n}\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  aditionalInformation = {}\n) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...aditionalInformation,\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n  onAuthStateChanged(auth, callback); //is a listener that will excecute the callback function you pass to it whenever is a change in Auth state\n"]},"metadata":{},"sourceType":"module"}