{"ast":null,"code":"var _jsxFileName = \"/Users/Peter/Coding/Complete React ZTM/E-ShopV2/crwn-clothing-v2/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(item => item.id === productToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: ++cartItem.quantity\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: \"1\"\n  }];\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => null,\n  cartItems: [],\n  addItemToCart: () => {}\n});\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"X7m0wQJ+zlrOgjCUh5u2IGGBLdE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/Peter/Coding/Complete React ZTM/E-ShopV2/crwn-clothing-v2/src/context/cart.context.jsx"],"names":["useState","createContext","addCartItem","cartItems","productToAdd","existingCartItem","find","item","id","map","cartItem","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","CartProvider","children","setCartItems","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC/C,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,YAAY,CAACI,EADZ,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeC,QAAD,IACnBA,QAAQ,CAACF,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GACI,EAAE,GAAGE,QAAL;AAAeC,MAAAA,QAAQ,EAAE,EAAED,QAAQ,CAACC;AAApC,KADJ,GAEID,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGP,SAAJ,EAAe,EAAE,GAAGC,YAAL;AAAmBO,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACD,CAdD;;AAgBA,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC;AACvCY,EAAAA,UAAU,EAAE,KAD2B;AAEvCC,EAAAA,aAAa,EAAE,MAAM,IAFkB;AAGvCX,EAAAA,SAAS,EAAE,EAH4B;AAIvCY,EAAAA,aAAa,EAAE,MAAM,CAAE;AAJgB,CAAD,CAAjC;AAOP,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACJ,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACG,SAAD,EAAYe,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMe,aAAa,GAAIX,YAAD,IAAkB;AACtCc,IAAAA,YAAY,CAAChB,WAAW,CAACC,SAAD,EAAYC,YAAZ,CAAZ,CAAZ;AACD,GAFD;;AAIA,QAAMe,KAAK,GAAG;AAAEN,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BX,IAAAA,SAA7B;AAAwCY,IAAAA;AAAxC,GAAd;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,KAA7B;AAAA,cAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAXM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { useState, createContext } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (item) => item.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: ++cartItem.quantity }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: \"1\" }];\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => null,\n  cartItems: [],\n  addItemToCart: () => {},\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n\n  const addItemToCart = (productToAdd) => {\n    setCartItems(addCartItem(cartItems, productToAdd))\n  };\n\n  const value = { isCartOpen, setIsCartOpen, cartItems, addItemToCart, };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}